{"version":3,"sources":["main.js"],"names":["$siteList","$","$lastLi","find","x","localStorage","getItem","xObject","JSON","parse","hashMap","logo","url","simplifyUrl","replace","render","remove","forEach","node","index","$li","insertBefore","on","window","open","e","stopPropagation","splice","prompt","indexOf","console","log","push","toUpperCase","onbeforeunload","string","stringify","setItem"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,YAAYC,EAAE,WAAF,CAAlB;AACA,IAAMC,UAAUF,UAAUG,IAAV,CAAe,SAAf,CAAhB;AACA,IAAMC,IAAIC,aAAaC,OAAb,CAAqB,GAArB,CAAV;AACA;AACA,IAAMC,UAAUC,KAAKC,KAAL,CAAWL,CAAX,CAAhB;AACA,IAAMM,UAAUH,WAAW,CACzB,EAAEI,MAAM,GAAR,EAAaC,KAAK,wBAAlB,EADyB,EAEzB,EAAED,MAAM,GAAR,EAAaC,KAAK,oBAAlB,EAFyB,EAGzB,EAAED,MAAM,GAAR,EAAaC,KAAK,yBAAlB,EAHyB,EAIzB,EAAED,MAAM,GAAR,EAAaC,KAAK,mBAAlB,EAJyB,EAKzB,EAAED,MAAM,GAAR,EAAaC,KAAK,4BAAlB,EALyB,CAA3B;AAOA,IAAMC,cAAc,SAAdA,WAAc,CAACD,GAAD,EAAS;AAC3B,SAAOA,IACJE,OADI,CACI,UADJ,EACgB,EADhB,EAEJA,OAFI,CAEI,SAFJ,EAEe,EAFf,EAGJA,OAHI,CAGI,MAHJ,EAGY,EAHZ,EAIJA,OAJI,CAII,MAJJ,EAIY,EAJZ,CAAP,CAD2B,CAKH;AACzB,CAND;;AAQA,IAAMC,SAAS,SAATA,MAAS,GAAM;AACnBf,YAAUG,IAAV,CAAe,eAAf,EAAgCa,MAAhC;AACA;AACAN,UAAQO,OAAR,CAAgB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC/B,QAAMC,MAAMnB,mFAEoBiB,KAAKP,IAFzB,qDAGoBE,YAAYK,KAAKN,GAAjB,CAHpB,uOAUES,YAVF,CAUenB,OAVf,CAAZ;AAWAkB,QAAIE,EAAJ,CAAO,OAAP,EAAgB,YAAM;AACpBC,aAAOC,IAAP,CAAYN,KAAKN,GAAjB;AACD,KAFD;AAGAQ,QAAIE,EAAJ,CAAO,OAAP,EAAgB,QAAhB,EAA0B,UAACG,CAAD,EAAO;AAC/BA,QAAEC,eAAF,GAD+B,CACV;AACrBhB,cAAQiB,MAAR,CAAeR,KAAf,EAAsB,CAAtB;AACAJ;AACD,KAJD;AAKD,GApBD;AAqBD,CAxBD;;AA0BAA;;AAEAd,EAAE,YAAF,EAAgBqB,EAAhB,CAAmB,OAAnB,EAA4B,YAAM;AAChC,MAAIV,MAAMW,OAAOK,MAAP,CAAc,cAAd,CAAV;AACA,MAAIhB,IAAIiB,OAAJ,CAAY,MAAZ,MAAwB,CAA5B,EAA+B;AAC7BjB,UAAM,aAAaA,GAAnB;AACD;AACDkB,UAAQC,GAAR,CAAYnB,GAAZ;AACAF,UAAQsB,IAAR,CAAa;AACXrB,UAAME,YAAYD,GAAZ,EAAiB,CAAjB,EAAoBqB,WAApB,EADK;AAEXrB,SAAKA;AAFM,GAAb;AAIAG;AACD,CAXD;;AAaAQ,OAAOW,cAAP,GAAwB,YAAM;AAC5B,MAAMC,SAAS3B,KAAK4B,SAAL,CAAe1B,OAAf,CAAf;AACAL,eAAagC,OAAb,CAAqB,GAArB,EAA0BF,MAA1B;AACD,CAHD;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.6322c66f.map","sourceRoot":"..\\src","sourcesContent":["const $siteList = $(\".siteList\");\nconst $lastLi = $siteList.find(\"li.last\");\nconst x = localStorage.getItem(\"x\");\n//读取当前网站下的x，如果x能成功的变成一个对象，那就把这个对象放在hashMap里；如果不能，我就把它初始化成有两项的数组\nconst xObject = JSON.parse(x);\nconst hashMap = xObject || [\n  { logo: \"B\", url: \"https://m.bilibili.com\" },\n  { logo: \"C\", url: \"https://codepen.io\" },\n  { logo: \"I\", url: \"https://www.iconfont.cn\" },\n  { logo: \"J\", url: \"https://juejin.cn\" },\n  { logo: \"T\", url: \"https://cloud.tencent.com/\" },\n];\nconst simplifyUrl = (url) => {\n  return url\n    .replace(\"https://\", \"\")\n    .replace(\"http://\", \"\")\n    .replace(\"www.\", \"\")\n    .replace(/\\/.*/, \"\"); //删除 /\n};\n\nconst render = () => {\n  $siteList.find(\"li:not(.last)\").remove();\n  //找到除了 .last 的 li ，并删除，也就是删掉之前本有的那些li，接着forEach遍历hashMap重新添加旧的li和新的li\n  hashMap.forEach((node, index) => {\n    const $li = $(`<li>\n            <div class=\"site\">\n                <div class=\"logo\">${node.logo}</div >\n                <div class=\"link\">${simplifyUrl(node.url)}</div>\n                <div class=\"close\">\n                <svg class=\"icon\">\n                <use xlink:href=\"#icon-close\"></use>\n               </svg>\n                </div>\n            </div >\n        </li > `).insertBefore($lastLi);\n    $li.on(\"click\", () => {\n      window.open(node.url);\n    });\n    $li.on(\"click\", \".close\", (e) => {\n      e.stopPropagation(); //阻止冒泡\n      hashMap.splice(index, 1);\n      render();\n    });\n  });\n};\n\nrender();\n\n$(\".addButton\").on(\"click\", () => {\n  let url = window.prompt(\"请问你要添加的网址是啥？\");\n  if (url.indexOf(\"http\") !== 0) {\n    url = \"https://\" + url;\n  }\n  console.log(url);\n  hashMap.push({\n    logo: simplifyUrl(url)[0].toUpperCase(),\n    url: url,\n  });\n  render();\n});\n\nwindow.onbeforeunload = () => {\n  const string = JSON.stringify(hashMap);\n  localStorage.setItem(\"x\", string);\n};\n\n// 用户体验不好，搜索时候会打开网站\n// $(document).on('keypress', (e) => {\n//     const { key } = e\n//     console.log()\n//     for (let i = 0; i < hashMap.length; i++) {\n//         // if (hashMap[i].logo.toLowerCase() === key) {\n//         //     window.open(hashMap[i].url)\n//         // }\n//     }\n// })\n"]}